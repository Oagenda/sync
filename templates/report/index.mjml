<mjml>
  <mj-head>
    <mj-style inline="inline">
      .total-checksum div .success {
        color: #0dac50;
      }

      .total-checksum div .error {
        color: #e74c3c;
      }
    </mj-style>
  </mj-head>

  <mj-body>
    <mj-section padding="15px 0">
      <mj-column>
        <mj-image
          css-class="logo"
          width="300px"
          src="https://openagenda.com/images/openagenda.png"
          href="https://openagenda.com/"
          padding="0"
          alt="logo"
        />
      </mj-column>
    </mj-section>

    <mj-section padding-bottom="0">
      <mj-column>
        <mj-text font-size="22px">Rapport de synchronisation</mj-text>
      </mj-column>
    </mj-section>

    <% for (const { agenda, stats } of data) { %>

      <mj-section padding-top="0" padding-bottom="10px">
        <mj-column>
          <mj-text padding="10px 25px 0 25px">
            <b><%= agenda.title %></b><br />
            Exécuté le <%= stats.startSyncDateStr %>
          </mj-text>

          <% if (stats.eventListError) { %>
            <mj-text color="#e74c3c" padding="10px 25px 0 25px">
              <b><u>La source de données a présenté des erreurs lors de sa lecture, la synchronisation a été
                  interrompue.</u></b>
            </mj-text>
            <mj-text color="#e74c3c" padding="10px 25px 0 25px">
              <%= JSON.stringify(stats.eventListError) %>
            </mj-text>
          <% } else { %>
            <mj-text padding="0">
              <ul>
                <%- 'savedEvents' in stats && stats.savedEvents !== 0
                  ? `<li>Evénements présents dans la source: <b>${stats.savedEvents}</b></li>`
                  : '<li>Aucun événement présent dans la source.</li>' %>
                <%- 'eventsWithoutLocation' in stats
                  ? `<li>Evénements sans lieu: <b>${stats.eventsWithoutLocation}</b></li>`
                  : '' %>
                <%- 'splitSourceLocations' in stats
                  ? `<li>Evénements de la source distribués sur plusieurs événements (plusieurs lieux): <b>${stats.splitSourceLocations}</b> -> <b>${stats.splitedSourceLocations}</b></li>`
                  : '' %>
                <%- 'mergedSourceEvents' in stats
                  ? `<li>Evénements de la source fusionnés: <b>${stats.mergedSourceEvents}</b> -> <b>${stats.mergedEvents}</b></li>`
                  : '' %>
                <%- 'splitSourceEvents' in stats
                  ? `<li>Evénements de la source distribués sur plusieurs événements (horaires): <b>${stats.splitSourceEvents}</b> -> <b>${stats.splitedSourceEvents}</b></li>`
                  : '' %>
                <%- 'ignoredEvents' in stats
                  ? `<li>Evénements ignorés: <b>${stats.ignoredEvents}</b>`
                  : `` %>
                <%- 'upToDateEvents' in stats
                  ? `<li>Evénements déjà à jour: <b>${stats.upToDateEvents}</b></li>`
                  : '' %>
                <%- 'createdEvents' in stats ? `<li>Evénements créés: <b>${stats.createdEvents}</b></li>` : '' %>
                <%- 'recreatedEvents' in stats ? `<li>Evénements re-créés: <b>${stats.recreatedEvents}</b></li>` : '' %>
                <%- 'updatedEvents' in stats ? `<li>Evénements mis à jour: <b>${stats.updatedEvents}</b></li>` : '' %>
                <%- 'invalidImages' in stats
                  ? `<li>Images invalides détectées: <b>${stats.invalidImages}</b></li>`
                  : '' %>
                <%- 'createdLocations' in stats ? `<li>Lieux créés: <b>${stats.createdLocations}</b></li>` : '' %>
              </ul>
            </mj-text>

            <mj-text css-class="total-checksum" padding="0 25px 0 25px">
              Vérification des totaux: <%- (stats.savedEvents || 0)
              + ((stats.splitedSourceLocations || 0) - (stats.splitSourceLocations || 0))
              - ((stats.mergedSourceEvents || 0) - (stats.mergedEvents || 0))
              - (stats.eventsWithoutLocation || 0)
              - (stats.ignoredEvents || 0)
              - ((stats.createdEvents || 0) + (stats.recreatedEvents || 0) + (stats.updatedEvents || 0) + (stats.upToDateEvents || 0)) === 0
                ? `<span class="success">ok</span>` : `<span class="error">incorrect</span>` %>
            </mj-text>
          <% } %>

          <%
            const totalErrors = (stats.locationErrors || 0)
              + (stats.eventMapErrors || 0)
              + (stats.eventCreateErrors || 0)
              + (stats.eventFalsyRemoveErrors || 0)
              + (stats.eventRecreateErrors || 0)
              + (stats.eventUpdateErrors || 0)
              + (stats.eventCreateTimingsErrors || 0)
              + (stats.eventRemoveTimingsErrors || 0)
              + (stats.eventRemoveErrors || 0)
          %>

          <% if (totalErrors > 0) { %>
            <mj-text color="#e74c3c" padding="0 25px 0 25px">
              Avec un total de <b><%- totalErrors %></b> erreur<%- totalErrors > 1 ? 's' : '' %>.
            </mj-text>
          <% } %>
        </mj-column>
      </mj-section>
    <% } %>
  </mj-body>
</mjml>
